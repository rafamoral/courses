---
title: "Time Series and Forecasting -- Practical 1"
author: ""
date: ""
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Exercise 1

Which of the time series below appear stationary?

```{r, echo = FALSE, warning = FALSE, message = FALSE, fig.width = 6, fig.height=4, fig.align='center'}
library(fpp3)

canadian_gas %>%
  autoplot(Volume) +
  theme_bw() +
  ggtitle("(a) Canadian gas production")

canadian_gas %>%
  mutate(dVolume = c(NA,diff(Volume))) %>%
  autoplot(dVolume) +
  theme_bw() +
  ylab(expression(Volume[t]-Volume[t-1])) +
  ggtitle("(b) Canadian gas production (Differenced series)")

us_change %>%
  autoplot(Income) +
  theme_bw() +
  ggtitle("(c) Percentage changes in personal disposable income in the US")
```

```{r}
#| code-fold: true
#| code-summary: "Show Answer"

# Series (a) has trend and seasonality, therefore not stationary.

# Series (b) has no trend, however has seasonality and the variance is not constant, so therefore not stationary.

# Series (c) has no trend or seasonality and has constant mean and variance, therefore stationary.
```

## Exercise 2

The `USgas` package contains data on the demand for natural gas in the US. Install and load the `USgas` package using the code below.

```{r, eval = FALSE}
install.packages("USgas")
library(USgas)
```

**(a)** Create a tsibble from `us_total` with `year` as the index and `state` as the key.

**(b)** Plot the annual natural gas consumption by state for the New England area (comprising the states of Maine, Vermont, New Hampshire, Massachusetts, Connecticut and Rhode Island).

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

library(USgas)

us_tsibble <- us_total %>%
  as_tsibble(index=year, key=state)

# For each state
us_tsibble %>%
  filter(state %in% c("Maine", "Vermont", "New Hampshire", "Massachusetts",
                      "Connecticut", "Rhode Island")) %>%
  autoplot(y/1e3) +
  labs(y = "billion cubic feet")
```


## Exercise 3

**(a)** Load the `tourism.xlsx` into R using `read_csv("https://raw.githubusercontent.com/rafamoral/courses/main/time_series_forecasting/data/tourism.csv")`.

**(b)** Create a `tsibble` which is identical to the `tourism` `tsibble` from the `tsibble` package.

**(c)** Find what combination of `Region` and `Purpose` had the maximum number of overnight trips on average.

**(d)** Create a new `tsibble` which combines `Purpose` and `Region`, and just has total trips by `State`.

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

my_tourism <- read_csv("https://raw.githubusercontent.com/rafamoral/courses/main/time_series_forecasting/data/tourism.csv") %>%
  mutate(Quarter = yearquarter(Quarter)) %>%
  as_tsibble(
    index = Quarter,
    key = c(Region, State, Purpose)
  )
my_tourism
tourism

my_tourism %>%
  as_tibble() %>%
  group_by(Region, Purpose) %>%
  summarise(Trips = mean(Trips)) %>%
  ungroup() %>%
  filter(Trips == max(Trips))

state_tourism <- my_tourism %>%
  group_by(State) %>%
  summarise(Trips = sum(Trips)) %>%
  ungroup()
state_tourism
```

## Exercise 4

Consider the last five years of the `Gas` data from `aus_production`.

```{r, eval = FALSE}
gas <- tail(aus_production, 5*4) %>% select(Gas)
```

**(a)** Plot the time series. Can you identify seasonal fluctuations and/or a trend-cycle?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

gas <- tail(aus_production, 5 * 4) %>% select(Gas)
gas %>%
  autoplot(Gas) + labs(y = "Petajoules")

# There is some strong seasonality and a trend.
```

**(b)** Use `classical_decomposition` with `type = multiplicative` to calculate the trend-cycle and seasonal indices.

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

decomp <- gas %>%
  model(decomp = classical_decomposition(Gas, type = "multiplicative")) %>%
  components()
decomp %>% autoplot()
```

**(c)** Do the results support the graphical interpretation from part (a)?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

# The decomposition has captured the seasonality and a slight trend.
```

**(d)** Compute and plot the seasonally adjusted data.

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

as_tsibble(decomp) %>%
  autoplot(season_adjust) +
  labs(title = "Seasonally adjusted data", y = "Petajoules")
```

**(e)** Change one observation to be an outlier (e.g., add 300 to one observation), and recompute the seasonally adjusted data. What is the effect of the outlier?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

gas %>%
  mutate(Gas = if_else(Quarter == yearquarter("2007Q4"), Gas + 300, Gas)) %>%
  model(decomp = classical_decomposition(Gas, type = "multiplicative")) %>%
  components() %>%
  as_tsibble() %>%
  autoplot(season_adjust) +
  labs(title = "Seasonally adjusted data", y = "Petajoules")

# The "seasonally adjusted" data now shows some seasonality because the outlier has affected the estimate of the seasonal component.
```

**(f)** Does it make any difference if the outlier is near the end rather than in the middle of the time series?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

gas %>%
  mutate(Gas = if_else(Quarter == yearquarter("2010Q2"), Gas + 300, Gas)) %>%
  model(decomp = classical_decomposition(Gas, type = "multiplicative")) %>%
  components() %>%
  as_tsibble() %>%
  autoplot(season_adjust) +
  labs(title = "Seasonally adjusted data", y = "Petajoules")

# The seasonally adjusted data now show no seasonality because the outlier is in the part of the data where the trend can't be estimated.
```

## Exercise 5

Use the help function to explore what the series `gafa_stock`, `PBS`, `vic_elec`, and `pelt` represent.

**(a)** Use `autoplot()` to plot some of the series in these datasets. What is the time interval of each series?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

### gafa_stock

gafa_stock %>%
  autoplot(Close)

# Stock prices for these technology stocks have risen for most of the series, until mid-late 2018.

gafa_stock

# Interval is daily. Looking closer at the data, we can see that the index is a Date variable. It also appears that observations occur only on trading days, creating lots of implicit missing values.

### PBS

# There are too many series to plot. Let's focus on aggregate A10 expenditure.

a10 <- PBS %>%
  filter(ATC2 == "A10") %>%
  summarise(Cost = sum(Cost))

a10 %>%
  autoplot(Cost)

# Appears to have upward trend (perhaps exponential), and seasonality which varies proportionately to the level of the series.

a10

# Observations are made once every month.

### vic_elec

vic_elec %>%
  autoplot(Demand)

# Appears to have an annual seasonal pattern, where demand is higher during summer and winter. Can't see much detail, so let's zoom in.

vic_elec %>%
  filter(yearmonth(Time) == yearmonth("2012 June")) %>%
  autoplot(Demand)

# Appears to have a daily pattern, where less electricity is used overnight. Also appears to have a working day effect (less demand on weekends and holidays).

vic_elec

# Data is available at 30 minute intervals.

### pelt

pelt %>% autoplot(Lynx)

# Canadian lynx trappings appears to be cyclic, as the extent of peak trappings is unpredictable, and the spacing between the peaks is irregular.

pelt %>% autoplot(Hare)

# Similar can be said for snowshoe hare trappings, although this series appears more erratic.

pelt %>%
  pivot_longer(Hare:Lynx, names_to="Animal", values_to="Trappings") %>%
  autoplot(Trappings)

# Plotting both Lynx and Hare trappings, it appears that the peaks in Canadian Lynx trappings occur shortly after peaks in Snowshoe Hare trappings. This relationship is due to the Canadian Lynx being specialised hunters of the Snowshoe Hare, resulting in a strong predator-prey relationship.

interval(pelt)

# Observations are made once per year.
```

**(b)** Use `filter()` to find what days corresponded to the peak closing price for each of the four stocks in `gafa_stock`.

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

gafa_stock %>%
  group_by(Symbol) %>%
  filter(Close == max(Close)) %>%
  ungroup() %>%
  select(Symbol, Date, Close)
```

## Exercise 6

Use the following graphics functions: `autoplot()`, `gg_season()`, `gg_subseries()`, and `gg_lag()` and explore features from the following time series: "Total Private Employed" from `us_employment`, `Bricks` from `aus_production`, `Hare` from `pelt`, "H02" Cost from `PBS`, and `us_gasoline`.

- Can you spot any seasonality, cyclicity and trend?
- What do you learn about the series?
- What can you say about the seasonal patterns?
- Can you identify any unusual years?

```{r, eval = FALSE}
#| code-fold: true
#| code-summary: "Show Answer"

### Total Private Employment in the US

us_employment %>%
  filter(Title == "Total Private") %>%
  autoplot(Employed)

# There is a strong trend and seasonality. Some cyclic behaviour is seen, with a big drop due to the global financial crisis.

us_employment %>%
  filter(Title == "Total Private") %>%
  gg_season(Employed)

us_employment %>%
  filter(Title == "Total Private") %>%
  gg_subseries(Employed)

us_employment %>%
  filter(Title == "Total Private") %>%
  gg_lag(Employed)

us_employment %>%
  filter(Title == "Total Private") %>%
  ACF(Employed) %>%
  autoplot()

# In all of these plots, the trend is so dominant that it is hard to see anything else. We need to remove the trend so we can explore the other features of the data.

### Brick production in Australia

aus_production %>%
  autoplot(Bricks)

# A positive trend in the first 20 years, and a negative trend in the next 25 years. Strong quarterly seasonality, with some cyclicity -- note the recessions in the 1970s and 1980s.

aus_production %>%
  gg_season(Bricks)

# Brick production tends to be lowest in the first quarter and peak in either quarter 2 or quarter 3.

aus_production %>%
  gg_subseries(Bricks)

# The decrease in the last 25 years has been weakest in Q1.

aus_production %>%
  gg_lag(Bricks, geom='point')
aus_production %>%
  ACF(Bricks) %>% autoplot()

# The seasonality shows up as peaks at lags 4, 8, 12, 16, 20, .... The trend is seen with the slow decline on the positive side.

### Snow hare trappings in Canada

pelt %>%
  autoplot(Hare)

# There is some cyclic behaviour with substantial variation in the length of the period.

pelt %>%
  gg_lag(Hare, geom='point')
pelt %>%
  ACF(Hare) %>% autoplot()

# The cyclic period seems to have an average of about 10 (due to the local maximum in ACF at lag 10).

### H02 sales in Australia

There are four series corresponding to H02 sales, so we will add them together.

h02 <- PBS %>%
  filter(ATC2 == "H02") %>%
  group_by(ATC2) %>%
  summarise(Cost = sum(Cost)) %>%
  ungroup()

h02 %>%
  autoplot(Cost)

# A positive trend with strong monthly seasonality, dropping suddenly every February.

h02 %>%
  gg_season(Cost)

h02 %>%
  gg_subseries(Cost)

# The trends have been greater in the higher peaking months -- this leads to increasing seasonal variation.

h02 %>%
  gg_lag(Cost, geom='point', lags=1:16)
h02 %>%
  ACF(Cost) %>% autoplot()

# The large January sales show up as a separate cluster of points in the lag plots. The strong seasonality is clear in the ACF plot.

### US gasoline sales

us_gasoline %>%
  autoplot(Barrels)

# A positive trend until 2008, and then the global financial crisis led to a drop in sales until 2012. The shape of the seasonality seems to have changed over time.

us_gasoline %>%
  gg_season(Barrels)

# There is a lot of noise making it hard to see the overall seasonal pattern. However, it seems to drop towards the end of quarter 4.

us_gasoline %>%
  gg_subseries(Barrels)

# The blue lines are helpful in seeing the average seasonal pattern.

us_gasoline %>%
  gg_lag(Barrels, geom='point', lags=1:16)
us_gasoline %>%
  ACF(Barrels, lag_max = 150) %>% autoplot()

# The seasonality is seen if we increase the lags to at least 2 years (approx 104 weeks)
```